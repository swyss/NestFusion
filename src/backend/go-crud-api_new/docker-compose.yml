services:
  go_app:
    container_name: go_app
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: "${DATABASE_URL}"
      REDIS_URL: "${REDIS_URL}"
      INFLUXDB_URL: "${INFLUXDB_URL}"
      INFLUXDB_TOKEN: "${INFLUXDB_TOKEN}"
    ports:
      - "8000:8000"
    depends_on:
      go_db:
        condition: service_healthy
      go_redis:
        condition: service_healthy
      go_influxdb:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  go_db:
    container_name: go_db
    image: postgres:12
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_DB: "${POSTGRES_DB}"
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 5s      # Healthcheck alle 5 Sekunden ausführen
      timeout: 10s      # 10 Sekunden warten, bevor ein Timeout ausgelöst wird
      retries: 10       # Bis zu 10 Versuche vor dem Fehlschlag

  go_redis:
    container_name: go_redis
    image: redis:6.2
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  go_influxdb:
    container_name: go_influxdb
    image: influxdb:2.0
    environment:
      INFLUXDB_DB: "${INFLUXDB_DB}"
      INFLUXDB_ADMIN_USER: "${INFLUXDB_ADMIN_USER}"
      INFLUXDB_ADMIN_PASSWORD: "${INFLUXDB_ADMIN_PASSWORD}"
    ports:
      - "8086:8086"
    volumes:
      - influxdbdata:/var/lib/influxdb
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: [ "CMD", "curl", "-s", "http://localhost:8086/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata: { }
  redisdata: { }
  influxdbdata: { }
