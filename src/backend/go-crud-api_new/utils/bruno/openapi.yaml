openapi: 3.0.0
info:
  title: Go CRUD API
  description: API documentation for the Go CRUD application.
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com

servers:
  - url: http://localhost:8000
    description: Local server

paths:
  /users:
    get:
      summary: Get all users
      operationId: getUsers
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      operationId: createUser
      requestBody:
        description: User object that needs to be added to the database
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/{id}:
    get:
      summary: Get a user by ID
      operationId: getUserById
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the user to retrieve
          schema:
            type: string
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found

    put:
      summary: Update a user
      operationId: updateUser
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the user to update
          schema:
            type: string
      requestBody:
        description: User object that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

    delete:
      summary: Delete a user
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the user to delete
          schema:
            type: string
      responses:
        '204':
          description: User deleted successfully
        '404':
          description: User not found

  /auditlog:
    get:
      summary: Get audit logs
      operationId: getAuditLogs
      responses:
        '200':
          description: A list of audit logs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditLog'

  /plant:
    post:
      summary: Create a new plant
      operationId: createPlant
      requestBody:
        description: Plant object that needs to be added to the database
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPlant'
      responses:
        '201':
          description: Plant created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plant'

  /plant/{id}:
    get:
      summary: Get a plant by ID
      operationId: getPlantById
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the plant to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Plant details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plant'
        '404':
          description: Plant not found

    put:
      summary: Update a plant
      operationId: updatePlant
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the plant to update
          schema:
            type: string
      requestBody:
        description: Plant object that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlant'
      responses:
        '200':
          description: Plant updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plant'

    delete:
      summary: Delete a plant
      operationId: deletePlant
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the plant to delete
          schema:
            type: string
      responses:
        '204':
          description: Plant deleted successfully
        '404':
          description: Plant not found

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string

    NewUser:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string

    UpdateUser:
      type: object
      properties:
        name:
          type: string
        email:
          type: string

    AuditLog:
      type: object
      properties:
        id:
          type: string
        action:
          type: string
        timestamp:
          type: string
        userId:
          type: string

    Plant:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        location:
          type: string
        userId:
          type: string

    NewPlant:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        location:
          type: string

    UpdatePlant:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        location:
          type: string
